<?xml version="1.0" encoding="UTF-8" ?>

<schema name="default" version="1.5">
 <fields>

   <field name="content" type="text_general" indexed="true" stored="false" multiValued="false"/>
   <field name="content_suggest" type="text_suggest" indexed="true" stored="false" />
   <field name="content_suggest_ngram" type="text_suggest_ngram" indexed="true" stored="false" />
   <field name="content_suggest_edge" type="text_suggest_edge" indexed="true" stored="false" />
   <field name="last_modified"  type="date" indexed="true" stored="true" multiValued="false"/>
   <field name="bucket_name" type="string" indexed="true" stored="true" multiValued="false" required="true"/>
   <field name="orig_name" type="string" indexed="true" stored="true" multiValued="false" required="true"/>
   <field name="orig_name_suggest" type="text_suggest" indexed="true" stored="false" />
   <field name="orig_name_suggest_ngram" type="text_suggest_ngram" indexed="true" stored="false" />
   <field name="orig_name_suggest_edge" type="text_suggest_edge" indexed="true" stored="false" />
   <field name="weightField" type="float" indexed="true" stored="true" multiValued="false"/>

   <copyField source="content" dest="content_suggest" />
   <copyField source="content" dest="content_suggest_ngram" />
   <copyField source="content" dest="content_suggest_edge" />
   <copyField source="orig_name" dest="orig_name_suggest" />
   <copyField source="orig_name" dest="orig_name_suggest_ngram" />
   <copyField source="orig_name" dest="orig_name_suggest_edge" />

   <dynamicField name="ignored_*" type="ignored" multiValued="true"/>

   <!-- catch-all field -->
   <dynamicField name="*" type="ignored" />

   <field name="_yz_id" type="_yz_str" indexed="true" stored="true" multiValued="false" required="true"/>

   <!-- Entropy Data: Data related to anti-entropy -->
   <field name="_yz_ed" type="_yz_str" indexed="true" stored="false" multiValued="false"/>

   <!-- Partition Number: Used as a filter query param -->
   <field name="_yz_pn" type="_yz_str" indexed="true" stored="false" multiValued="false"/>

   <!-- First Partition Number: The first partition in this doc's
        preflist, used for further filtering on overlapping partitions. -->
   <field name="_yz_fpn" type="_yz_str" indexed="true" stored="false" multiValued="false"/>

   <!-- If there is a sibling, use vtag to differentiate them -->
   <field name="_yz_vtag" type="_yz_str" indexed="true" stored="false" multiValued="false"/>

   <!-- Riak Key: The key of the Riak object this doc corresponds to. -->
   <field name="_yz_rk" type="_yz_str" indexed="true" stored="true" multiValued="false"/>

   <!-- Riak Bucket Type: The bucket type of the Riak object this doc corresponds to. -->
   <field name="_yz_rt" type="_yz_str" indexed="true" stored="true" multiValued="false"/>

   <!-- Riak Bucket: The bucket of the Riak object this doc corresponds to. -->
   <field name="_yz_rb" type="_yz_str" indexed="true" stored="true" multiValued="false"/>

   <!-- Flag indicating if this doc is the product of a failed object extraction -->
   <field name="_yz_err" type="_yz_str" indexed="true" stored="false" multiValued="false"/>

 </fields>

 <uniqueKey>_yz_id</uniqueKey>

  <types>
    <!-- YZ String: Used for non-analyzed fields -->
    <fieldType name="_yz_str" class="solr.StrField" sortMissingLast="true" />

    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. -->
    <fieldType name="text_general" class="solr.TextField">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="text_suggest_ngram" class="solr.TextField">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EdgeNGramFilterFactory" maxGramSize="20" minGramSize="1"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="^(.{20})(.*)?" replacement="$1" replace="all"/>
      </analyzer>
    </fieldType>

    <fieldType name="text_suggest_edge" class="solr.TextField">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([\.,;:-_])" replacement=" " replace="all"/>
        <filter class="solr.EdgeNGramFilterFactory" maxGramSize="30" minGramSize="1"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([\.,;:-_])" replacement=" " replace="all"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" replace="all"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="^(.{30})(.*)?" replacement="$1" replace="all"/>
      </analyzer>
    </fieldType>

    <!-- text_suggest : Matches whole terms in the suggest text  -->
    <fieldType name="text_suggest" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" 
              generateWordParts="1" 
              generateNumberParts="1"
              catenateWords="1"
              catenateNumbers="1"
              catenateAll="1"
              splitOnCaseChange="1"
              splitOnNumerics="1"
              preserveOriginal="1"
        />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement=" " replace="all"/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" 
              generateWordParts="0" 
              generateNumberParts="0"
              catenateWords="0"
              catenateNumbers="0"
              catenateAll="0"
              splitOnCaseChange="0"
              splitOnNumerics="0"
        />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement=" " replace="all"/>
      </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  -->
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />

 </types>
 <defaultSearchField>content_suggest_ngram</defaultSearchField>
 <solrQueryParser defaultOperator="AND"/>
</schema>
